/// Payment models
model Subscription {
  id                   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId               String    @map("user_id") @db.Uuid
  planId               String?   @map("plan_id") @db.Uuid
  status               SubscriptionStatus @default(active)
  currentPeriodStart   DateTime? @map("current_period_start") @db.Timestamptz(6)
  currentPeriodEnd     DateTime? @map("current_period_end") @db.Timestamptz(6)
  trialEnd             DateTime? @map("trial_end") @db.Timestamptz(6)
  cancelAtPeriodEnd    Boolean   @default(false) @map("cancel_at_period_end")
  stripeCustomerId     String?   @map("stripe_customer_id")
  stripeSubscriptionId String?   @unique @map("stripe_subscription_id")
  stripePriceId        String?   @map("stripe_price_id")
  startDate            DateTime? @map("start_date") @db.Timestamptz(6)
  endDate              DateTime? @map("end_date") @db.Timestamptz(6)
  cancelledAt          DateTime? @map("cancelled_at") @db.Timestamptz(6)
  createdAt            DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt            DateTime  @default(now()) @map("updated_at") @db.Timestamptz(6) @updatedAt

  // Relations
  user User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  plan SubscriptionPlan? @relation(fields: [planId], references: [id])

  @@index([userId])
  @@index([status])
  @@index([stripeSubscriptionId])
  @@index([planId])
  @@map("subscriptions")
  @@schema("payments")
}