name: CI

# TEMPORARILY DISABLED - Remove comments to re-enable
# on:
#   push:
#     branches: [main, dev]
#   pull_request:
#     branches: [main, dev]
on:
  workflow_dispatch: # Only allow manual triggering

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Quick validation checks
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - run: corepack enable

      # Quick cache for validation only
      - name: Get yarn cache
        id: yarn-cache
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - run: yarn install --immutable --inline-builds
        env:
          NODE_OPTIONS: '--max-old-space-size=4096'
      - run: yarn lint
      - run: yarn nx format:check

  # Main test job
  test:
    needs: validate
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres:17.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pika_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 15432:5432

      redis:
        image: redis:7.2-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 16379:6379

      stripe-mock:
        image: stripe/stripe-mock:latest
        ports:
          - 17111:12111

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - run: corepack enable

      # Full cache setup
      - name: Setup caches
        uses: ./.github/actions/cache-setup

      - run: yarn install --immutable --inline-builds
        env:
          NODE_OPTIONS: '--max-old-space-size=8192'
          YARN_ENABLE_SCRIPTS: false

      # Load CI environment
      - name: Load environment
        run: |
          cp .env.test .env
          # Override with CI-specific values
          # In GitHub Actions, services are available at localhost
          # In Act, services are available by service name
          if [ -n "$ACT" ]; then
            echo "DATABASE_URL=postgresql://postgres:postgres@postgres:5432/pika_test" >> .env
            echo "PG_HOST=postgres" >> .env
            echo "PG_PORT=5432" >> .env
            echo "REDIS_HOST=redis" >> .env
            echo "REDIS_PORT=6379" >> .env
            echo "STRIPE_MOCK_HOST=stripe-mock" >> .env
            echo "STRIPE_MOCK_PORT=12111" >> .env
          else
            echo "DATABASE_URL=postgresql://postgres:postgres@localhost:15432/pika_test" >> .env
            echo "PG_HOST=localhost" >> .env
            echo "PG_PORT=15432" >> .env
            echo "REDIS_HOST=localhost" >> .env
            echo "REDIS_PORT=16379" >> .env
            echo "STRIPE_MOCK_HOST=localhost" >> .env
            echo "STRIPE_MOCK_PORT=17111" >> .env
          fi

          # Use console storage provider for all CI runs (faster, no external dependencies)
          echo "STORAGE_PROVIDER_PRIMARY=console" >> .env
          echo "STORAGE_PROVIDER_FALLBACK=console" >> .env
          echo "# MinIO disabled in CI - use locally for storage tests" >> .env

      - name: Generate files
        run: |
          yarn db:generate
          yarn nx run-many --target=build --projects=@pika/types,@pika/environment --skip-nx-cache
          yarn generate:api
          yarn generate:docs
          yarn db:migrate
        env:
          DATABASE_URL: ${{ env.ACT && 'postgresql://postgres:postgres@postgres:5432/pika_test' || 'postgresql://postgres:postgres@localhost:15432/pika_test' }}

      - name: Type check
        run: yarn typecheck

      - name: Build
        run: yarn build

      - name: Test
        run: |
          # Skip MinIO-dependent tests in all CI environments (MinIO disabled for performance)
          # These tests work locally with docker-compose but are excluded from CI
          echo "Running tests - excluding MinIO-dependent integration tests"
          yarn test --exclude="**/storage-minio.integration.test.ts" --exclude="**/storage-s3.integration.test.ts"

      # Only upload coverage if it exists
      - name: Upload coverage
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.sha }}
          path: coverage/
          retention-days: 7
          if-no-files-found: ignore

  # Summary job for branch protection
  ci-complete:
    needs: [validate, test]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: CI Summary
        run: |
          if [ "${{ needs.validate.result }}" != "success" ] || [ "${{ needs.test.result }}" != "success" ]; then
            echo "❌ CI Failed"
            exit 1
          fi
          echo "✅ CI Passed"
